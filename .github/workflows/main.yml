name: CI/CD Pipeline

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build Placeholder
        run: |
          echo "Build step - your build commands would go here"
          echo "Build completed successfully!"

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://dev.myapp.com
    steps:
      - name: Deploy to Dev
        run: |
          echo "Deploying to Dev environment"
          # Add your deployment commands here

  deploy-qa:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: https://qa.myapp.com
    steps:
      - name: Deploy to QA
        run: |
          echo "Deploying to QA environment"
          # Add your deployment commands here

  review:
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment:
      name: review
    steps:
      - name: Create Review
        run: |
          echo "Creating review ticket"
          # Add commands to create review tickets or notifications

      - name: Wait for Review
        run: |
          echo "Waiting for manual review"
          # Add any review preparation steps

  ServiceNowDevOpsChange:
  # jobs that must complete successfully before this job will run
    needs: review
  # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    steps:     
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@v4.1.0
        id: create
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'ServiceNowDevOpsChange'
          change-request: '{"attributes":{"short_description":"Automated Software Deployment","description":"Automated Software Deployment.","assignment_group":"a715cd759f2002002920bde8132e7018","implementation_plan":"Software update is tested and results can be found in Test Summaries Tab; When the change is approved the implementation happens automated by the CICD pipeline within the change planned start and end time window.","backout_plan":"When software fails in production, the previous software release will be re-deployed.","test_plan":"Testing if the software was successfully deployed"}}'
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
          deployment-gate: '{"environment":"production","jobName":"ServiceNowDevOpsChange"}'
      - name: Output of Change Creation
        run: echo "change-request-number = ${{ steps.create.outputs.change-request-number }}" >> $GITHUB_OUTPUT
        
  deploy-prod:
    needs: ServiceNowDevOpsChange
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://myapp.com
    steps:
      - name: Deploy to Production
        run: |
          echo "Deploying to Production environment"
          # Add your production deployment commands here
