name: CI/CD Pipeline

on:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build Placeholder
        run: |
          echo "Build step - your build commands would go here"
          echo "Build completed successfully!"

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: development
      url: https://dev.myapp.com
    steps:
      - name: Deploy to Dev
        run: |
          echo "Deploying to Dev environment"
          # Add your deployment commands here

  deploy-qa:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: https://qa.myapp.com
    steps:
      - name: Deploy to QA
        run: |
          echo "Deploying to QA environment"
          # Add your deployment commands here

  review:
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment:
      name: review
    steps:
      - name: Create Review
        run: |
          echo "Creating review ticket"
          # Add commands to create review tickets or notifications

      - name: Wait for Review
        run: |
          echo "Waiting for manual review"
          # Add any review preparation steps

  ServiceNowDevOpsChange:
  # jobs that must complete successfully before this job will run
    needs: build
  # type of machine to run the job on
    runs-on: ubuntu-latest
    name: 'ServiceNow DevOps Change'
    steps:
      - name: ServiceNow Change
        uses: ServiceNow/servicenow-devops-change@v3.0.0
        with:
        # Devops Integration Token
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
        # ServiceNow Instance URL
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
        # Orchestration Tool Id
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
        # GitHub Context
          context-github: ${{ toJSON(github) }}
        # Display Name of the Job
          job-name: 'ServiceNow DevOps Change'

  deploy-prod:
    needs: ServiceNowDevOpsChange
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://myapp.com
    steps:
      - name: Deploy to Production
        run: |
          echo "Deploying to Production environment"
          # Add your production deployment commands here
